#!/usr/bin/env node

/* Module dependencies. */

const app = require('../index')
const debug = require('debug')('project2-donation-cart:server')
const http = require('http')

/* Get port from environment and store in Express. */

const port = normalizePort(process.env.PORT || '3000')
app.set('port', port)

/* Create HTTP server. */

const server = http.createServer(app)

/* Listen on provided port, on all network interfaces. */

server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

/* Normalize a port into a number, string, or false. */

function normalizePort (val) {
  const port = parseInt(val, 10)

  if (isNaN(port)) {
    // this is the named pipe
    return val
  }

  if (port >= 0) {
    // this is the port number
    return port
  }

  return false
}

/* event listener for HTTP server "error" event. */

function onError (error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port

  // handles specific listen errors with messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break;
    default:
      throw error
  }
}

/* HTTP server "listening" event. */

function onListening () {
  const addr = server.address()
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port
  debug('Listening on ' + bind)
}
